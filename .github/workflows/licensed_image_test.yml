# This YAML file is used to test a custom Docker image with the necessary tools and dependencies for an ML project
# It contains a job that runs tests on a Ubuntu machine using the custom Docker image

name: Licensed Docker Image - Test

on:
  # Trigger the workflow when a workflow run is completed
  workflow_run:
    workflows: ["Licensed Docker Image - Build and Push"]
    types:
      - completed
  # Trigger the workflow manually
  workflow_dispatch:

jobs:
  run_test:
    runs-on: ubuntu-latest
    container:
      # Use the custom Docker image with the necessary tools and dependencies
      image: ghcr.io/arm-software/avh-mlops/arm-mlops-docker-licensed:latest
      credentials:
        # Set the Docker image credentials using the actor and a GitHub token
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        # Check out the repository containing the ML project
        uses: actions/checkout@v2

      - name: Try to execute cbuild
        # Test if the cbuild command is working in the Docker container
        run: su -l arm_mlops_docker -c "/home/arm_mlops_docker/cmsis-toolbox-linux-amd64/bin/cbuild --version"

      - name: Run test command in Docker container for armclang and license
        # Test if the armclang command is working in the Docker container
        run: su -l arm_mlops_docker -c "/home/arm_mlops_docker/ArmCompilerforEmbedded6.20/bin/armclang --version"

      - name: Run test command in Docker container for arm-llvm
        # Test if the clang command is working in the Docker container
        run: su -l arm_mlops_docker -c "/home/arm_mlops_docker/LLVMEmbeddedToolchainForArm-16.0.0-Linux-x86_64/bin/clang --target=armv7m-none-eabi --version"

      - name: Run test command in Docker container for GNU Compiler
        # Test if the arm-none-eabi-gcc command is working in the Docker container
        run: su -l arm_mlops_docker -c "/home/arm_mlops_docker/arm-gnu-toolchain-12.3.rel1-x86_64-arm-none-eabi/bin/arm-none-eabi-gcc --version"